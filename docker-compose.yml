# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
    ports:
      - 8092:8092
      - 5005:5005
    depends_on:
      db:
        condition: service_healthy
      auth:
        condition: service_started
    environment:
      - POSTGRES_URL=${POSTGRES_URL}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
  db:
    image: postgres
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./init-sql.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=template
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  auth:
    image: quay.io/keycloak/keycloak:24.0.4
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://db:5432/keycloak
      - KC_DB_USERNAME=${POSTGRES_USER}
      - KC_DB_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 8010:8080
    depends_on:
      - db
    command:
      - start-dev
      - --hostname=host.docker.internal:8010
      - --http-enabled=true
      - --hostname-strict-https=false
volumes:
  db-data:
# secrets:
#   db-password:
#     file: db/password.txt

